name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
        continue-on-error: true
      
      - name: Run tests
        run: npm test
        env:
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET || 'test_secret' }}
      
      - name: Generate coverage report
        run: npm test -- --coverage --coverageReporters=lcov
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Build project
        run: npm run build
      
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/
          retention-days: 30

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Start service
        run: |
          npm start &
          echo $! > service.pid
          sleep 5
        env:
          PORT: 3000
          NODE_ENV: test
          SLACK_SIGNING_SECRET: test_secret
      
      - name: Wait for service to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:3000/health; do sleep 1; done'
      
      - name: Run integration tests
        run: npm test -- integration
        env:
          SLACKBOT_URL: http://localhost:3000
      
      - name: Stop service
        if: always()
        run: |
          if [ -f service.pid ]; then
            kill $(cat service.pid) || true
          fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Check for outdated dependencies
        run: npm outdated || true

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
        continue-on-error: true
      
      - name: Check formatting
        run: |
          if command -v prettier &> /dev/null; then
            npx prettier --check "src/**/*.ts"
          else
            echo "Prettier not configured, skipping"
          fi
        continue-on-error: true
      
      - name: Type check
        run: npx tsc --noEmit

  test-coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate coverage
        run: npm test -- --coverage
      
      - name: Coverage summary
        run: |
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage/coverage-summary.json | jq '.total' >> $GITHUB_STEP_SUMMARY || echo "Coverage data not available"
          echo '```' >> $GITHUB_STEP_SUMMARY
      
      - name: Check coverage thresholds
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct' || echo 0)
          echo "Line coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "::warning::Coverage is below 70%"
          fi
